library(tidyverse)
library(tidyverse)
library(httr)
library(jsonlite)
# Working with the API to get the data of interest
# calling the API Test
api_base_url <- "https://lol.fandom.com/api.php"
api_base_url <- "https://lol.fandom.com/api.php"
query_param <- list(
action = "query",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "main"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
# Testing section 1
query_param <- list(
action = "query",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "main",
rvsection = "*"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
# Testing section 1
query_param <- list(
action = "query",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "main",
rvsection = "`*`"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
# Testing section 1
query_param <- list(
action = "query",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "*"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
# Testing section 1
query_param <- list(
action = "parse",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "main"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
# Testing section 1
query_param <- list(
action = "query",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "main",
rvtag = "*"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
# Testing section 1
query_param <- list(
action = "query",
format = "json",
prop = "revisions",
titles = "V4 data:ESPORTSTMNT02 2324059",
rvprop = "content",
rvslots = "*"
)
match_api_data <- GET(api_base_url, query = query_param)
api_content <- content(match_api_data)
api_content
## doesnt change much
# exploring content
str(api_content)
api_content$query[["*"]]
names(api_content$query)
api_content$query[1][1][1]
api_content$query[1][1]["pageid"]
api_content$query[1][["pageid"]]
api_content$query[["pageid"]]
api_content$query[length(api_content$query)]
api_content$query[length(api_content$query) - 1]
test <- tail(api_content$query, n= 1)
test
str(api_content$query)
a <- c("a", "b", "c")
b <- c("d")
b <- c("d", "e")
for (i in a){
for(j in b){
print(paste0(i,j))
}
}
c <- c("f")
for (i in a){
for(j in b){
for(k in c){
if i==j==k{
for (i in a){
for(j in b){
for(k in c){
if (i==j==k){
for (i in a){
for(j in b){
for(k in c){
if (i=j=k){
for (i in a){
for(j in b){
for(k in c){
if (i==j==k){
c <- c("f")
for (i in a){
for(j in b){
for(k in c){
if (i==j==k){
setwd("C:/Users/billy.houseman/Documents/GitHub/javaScriptForR")
usethis::create_package("sketchpad")
install.packages("rlang")
install.packages("rlang")
usethis::create_package("sketchpad")
